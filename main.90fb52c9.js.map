{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","button","cells","querySelectorAll","messageWin","messageLose","messageStart","rows","columnsQnt","total","gameFieldState","updateGameFieldState","cell","push","innerText","isLooser","result","row","length","getArrayFromRow","forEach","el","ind","arr","i","children","ar","hasEmptyCells","classList","removeCells","child","Number","getRowFromArray","innerHTML","updateStyle","moveCells","filtered","filter","value","column","num","add","moveCellsLeft","temp","addNewCells","moveCellsRight","reverse","getArrayFromColumn","collection","index","moveCellsUp","moveCellsd","moveCellsDown","startGame","index1","findEmptyCell","index2","generateNewCellValue","emptyCells","randomIndex","Math","floor","random","indexOf","resultCell","restartGame","className","tempGameFieldState","fieldWasChanged","updateMessage","handleStartButtonClick","e","target","handleRestartButtonClick","addEventListener","code"],"mappings":"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","file":"main.90fb52c9.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('tbody');\nconst button = document.querySelector('.button');\nconst cells = table.querySelectorAll('td');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\nconst rows = table.rows;\nconst columnsQnt = 4;\nlet total = 0;\nconst gameFieldState = [];\n\nfunction updateGameFieldState() {\n  for (const cell of cells) {\n    gameFieldState.push(+cell.innerText);\n  }\n}\n\nfunction isLooser() {\n  let result = false;\n\n  for (let row = 0; row < rows.length; row++) {\n    const temp = getArrayFromRow(rows[row]);\n\n    temp.forEach((el, ind, arr) => {\n      if (el === arr[ind + 1]) {\n        result = true;\n      }\n    });\n  };\n\n  for (let i = 0; i < columnsQnt; i++) {\n    const arr = [\n      +rows[0].children[i].innerText,\n      +rows[1].children[i].innerText,\n      +rows[2].children[i].innerText,\n      +rows[3].children[i].innerText,\n    ];\n\n    arr.forEach((el, ind, ar) => {\n      if (el === ar[ind + 1]) {\n        result = true;\n      };\n    });\n  }\n\n  if (!hasEmptyCells() && result === false) {\n    messageLose.classList.removeCells('hidden');\n  };\n};\n\nfunction getArrayFromRow(row) {\n  const result = [];\n\n  for (const child of row.children) {\n    if (child.innerText === '') {\n      result.push(0);\n      continue;\n    }\n    result.push(Number(child.innerText));\n  };\n\n  return result;\n};\n\nfunction getRowFromArray(arr, row) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === 0) {\n      row.children[i].innerHTML = '';\n      continue;\n    };\n\n    row.children[i].innerText = arr[i];\n  }\n\n  updateStyle();\n}\n\nfunction moveCells(row) {\n  let filtered = row.filter(el => el > 0);\n\n  for (let i = 0; i < filtered.length - 1; i++) {\n    if (filtered[i] === filtered[i + 1]) {\n      const value = filtered[i] * 2;\n\n      total += value;\n      filtered[i] = value;\n      filtered[i + 1] = 0;\n    };\n  };\n\n  filtered = filtered.filter(el => el > 0);\n\n  while (filtered.length < columnsQnt) {\n    filtered.push(0);\n  };\n\n  return filtered;\n};\n\nfunction updateStyle() {\n  const score = document.querySelector('.game-score');\n\n  score.innerText = `${total}`;\n\n  for (let row = 0; row < rows.length; row++) {\n    for (let column = 0; column < columnsQnt; column++) {\n      const num = rows[row].children[column].innerText;\n\n      rows[row].children[column].classList.value = '';\n      rows[row].children[column].classList.add('field-cell');\n\n      if (num !== '') {\n        rows[row].children[column].classList.add(`field-cell--${num}`);\n      }\n    }\n  };\n};\n\nfunction moveCellsLeft() {\n  for (const row of rows) {\n    let temp = getArrayFromRow(row);\n\n    temp = moveCells(temp);\n    getRowFromArray(temp, row);\n  };\n\n  addNewCells();\n};\n\nfunction moveCellsRight() {\n  for (const row of rows) {\n    let temp = getArrayFromRow(row);\n\n    temp.reverse();\n    temp = moveCells(temp);\n    temp.reverse();\n    getRowFromArray(temp, row);\n  }\n  addNewCells();\n}\n\nfunction getArrayFromColumn(collection, index) {\n  return [\n    +collection[0].children[index].innerText,\n    +collection[1].children[index].innerText,\n    +collection[2].children[index].innerText,\n    +collection[3].children[index].innerText,\n  ];\n}\n\nfunction moveCellsUp() {\n  for (let i = 0; i < columnsQnt; i++) {\n    const arr = getArrayFromColumn(rows, i);\n\n    const moveCellsd = moveCells(arr);\n\n    [...rows].forEach((row, index) => {\n      row.children[i].innerText\n        = moveCellsd[index] === 0\n          ? ''\n          : moveCellsd[index];\n    });\n  };\n  addNewCells();\n};\n\nfunction moveCellsDown() {\n  for (let i = 0; i < columnsQnt; i++) {\n    const arr = getArrayFromColumn(rows, i);\n\n    arr.reverse();\n\n    const moveCellsd = moveCells(arr);\n\n    moveCellsd.reverse();\n\n    [...rows].forEach((row, index) => {\n      row.children[i].innerText\n        = moveCellsd[index] === 0\n          ? ''\n          : moveCellsd[index];\n    });\n  };\n  addNewCells();\n}\n\nfunction startGame() {\n  const index1 = findEmptyCell();\n  let index2 = findEmptyCell();\n\n  while (index1 === index2) {\n    index2 = findEmptyCell();\n  }\n\n  cells[index1].innerText = generateNewCellValue();\n  cells[index2].innerText = generateNewCellValue();\n\n  updateStyle();\n};\n\nfunction findEmptyCell() {\n  const emptyCells = [...cells].filter(cell => cell.innerText === '');\n  const randomIndex = Math.floor(Math.random() * emptyCells.length);\n\n  return [...cells].indexOf(emptyCells[randomIndex]);\n}\n\nfunction generateNewCellValue() {\n  let resultCell;\n  const probability = Math.random();\n\n  if (probability < 0.1) {\n    resultCell = 4;\n  } else {\n    resultCell = 2;\n  }\n\n  return resultCell;\n}\n\nfunction restartGame() {\n  for (const cell of cells) {\n    cell.innerHTML = '';\n    cell.classList.value = '';\n    cell.className = 'field-cell';\n  }\n  total = 0;\n  startGame();\n};\n\nfunction addNewCells() {\n  if (!hasEmptyCells()) {\n    return;\n  }\n\n  const tempGameFieldState = [];\n\n  for (const cell of cells) {\n    tempGameFieldState.push(+cell.innerText);\n  }\n\n  let fieldWasChanged = false;\n\n  for (let i = 0; i < tempGameFieldState.length; i++) {\n    if (tempGameFieldState[i] !== gameFieldState[i]) {\n      fieldWasChanged = true;\n    }\n  }\n\n  if (fieldWasChanged) {\n    const index = findEmptyCell();\n\n    cells[index].innerText = generateNewCellValue();\n\n    updateStyle();\n  }\n\n  gameFieldState.length = 0;\n\n  updateGameFieldState();\n};\n\nfunction hasEmptyCells() {\n  for (const cell of cells) {\n    if (cell.innerText === '') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction updateMessage() {\n  for (const cell of cells) {\n    if (cell.innerText === '2048') {\n      messageWin.classList.removeCells('hidden');\n    };\n  };\n};\n\nfunction handleStartButtonClick(e) {\n  e.target.classList.value = '';\n  e.target.classList.add('button', 'restart');\n  e.target.innerText = 'Restart';\n  messageStart.classList.add('hidden');\n\n  startGame();\n}\n\nfunction handleRestartButtonClick(e) {\n  e.target.classList.value = '';\n  e.target.classList.add('button', 'restart');\n  messageLose.classList.add('hidden');\n\n  restartGame();\n}\n\nbutton.addEventListener('click', e => {\n  switch (e.target.innerText) {\n    case 'Start':\n      handleStartButtonClick(e);\n      break;\n    case 'Restart':\n      handleRestartButtonClick(e);\n      break;\n  };\n});\n\ndocument.addEventListener('keyup', e => {\n  if (e.code === 'ArrowLeft' && button.innerText === 'Restart') {\n    moveCellsLeft();\n    updateStyle();\n    updateMessage();\n    isLooser();\n  };\n});\n\ndocument.addEventListener('keyup', e => {\n  if (e.code === 'ArrowRight' && button.innerText === 'Restart') {\n    moveCellsRight();\n    updateStyle();\n    updateMessage();\n    isLooser();\n  };\n});\n\ndocument.addEventListener('keyup', e => {\n  if (e.code === 'ArrowUp' && button.innerText === 'Restart') {\n    moveCellsUp();\n    updateStyle();\n    updateMessage();\n    isLooser();\n  };\n});\n\ndocument.addEventListener('keyup', e => {\n  if (e.code === 'ArrowDown' && button.innerText === 'Restart') {\n    moveCellsDown();\n    updateMessage();\n    updateStyle();\n    isLooser();\n  };\n});\n"]}